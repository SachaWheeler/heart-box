//We always have to include the library
#include "LedControl.h"
#include "binary.h";

/*
 Now we need a LedControl to work with.
 ***** These pin numbers will probably not work with your hardware *****
 pin 12 is connected to the DataIn
 pin 11 is connected to the CLK
 pin 10 is connected to LOAD
 */
LedControl display = LedControl(12, 11, 10, 1);
const int buttonPin = 5;
int buttonStage = 0;

const byte BEATING_HEART[][8] = {
  {
    B00000000,
    B00000000,
    B00000000,
    B00110000,
    B00110000,
    B00000000,
    B00000000,
    B00000000
  }, {
    B00000000,
    B00000000,
    B00110000,
    B01111000,
    B01111000,
    B00110000,
    B00000000,
    B00000000
  }, {
    B00000000,
    B00110000,
    B01111000,
    B11111100,
    B11111100,
    B01111000,
    B00110000,
    B00000000
  }, {
    B00011100,
    B00111110,
    B01111110,
    B11111100,
    B11111100,
    B01111110,
    B00111110,
    B00011100
  }, {
    B00001110,
    B00011111,
    B00111111,
    B01111110,
    B01111110,
    B00111111,
    B00011111,
    B00001110
  }, {
    B00011100,
    B00111110,
    B01111110,
    B11111100,
    B11111100,
    B01111110,
    B00111110,
    B00011100
  }, {
    B00011100,
    B00111110,
    B01111110,
    B11111100,
    B11111100,
    B01111110,
    B00111110,
    B00011100
  }, {
    B00001110,
    B00011111,
    B00111111,
    B01111110,
    B01111110,
    B00111111,
    B00011111,
    B00001110
  }, {
    B00011100,
    B00111110,
    B01111110,
    B11111100,
    B11111100,
    B01111110,
    B00111110,
    B00011100
  }, {
    B00011100,
    B00111110,
    B01111110,
    B11111100,
    B11111100,
    B01111110,
    B00111110,
    B00011100
  }, {
    B00000000,
    B00110000,
    B01111000,
    B11111100,
    B11111100,
    B01111000,
    B00110000,
    B00000000
  }, {
    B00000000,
    B00000000,
    B00110000,
    B01111000,
    B01111000,
    B00110000,
    B00000000,
    B00000000
  }
};
const int BEATING_HEART_LEN = sizeof(BEATING_HEART) / 8;

// explosion
const byte EXPLOSION[][8] = {
  {
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
  }, {
    B00000000,
    B00000000,
    B00000000,
    B00011000,
    B00011000,
    B00000000,
    B00000000,
    B00000000
  }, {
    B00000000,
    B00000000,
    B00011000,
    B00111100,
    B00111100,
    B00011000,
    B00000000,
    B00000000
  }, {
    B00000000,
    B00001000,
    B00011000,
    B01111100,
    B00111110,
    B00011000,
    B00010000,
    B00000000
  }, {
    B00001000,
    B01001010,
    B00111100,
    B11111100,
    B00111111,
    B00111100,
    B01010010,
    B00010000
  }, {
    B10011011,
    B11001010,
    B00111100,
    B11100101,
    B10100111,
    B00111100,
    B01010011,
    B11011001
  }, {
    B10111011,
    B11111110,
    B01000011,
    B11000011,
    B11000011,
    B11000010,
    B01111111,
    B11011101
  }, {
    B11111111,
    B11100111,
    B11000011,
    B10000001,
    B10000001,
    B11000011,
    B11100111,
    B11111111
  }, {
    B01100110,
    B10000001,
    B10000001,
    B00000000,
    B00000000,
    B10000001,
    B10000001,
    B01100110
  }
};
const int EXPLOSION_LEN = sizeof(EXPLOSION) / 8;

const byte MESSAGE[][8] = {
{
  B00000000,
  B01100110,
  B01100110,
  B01100110,
  B00111100,
  B00011000,
  B00011000,
  B00011000
},{
  B00000000,
  B11001100,
  B11001100,
  B11001100,
  B01111001,
  B00110001,
  B00110001,
  B00110000
},{
  B00000000,
  B10011000,
  B10011000,
  B10011001,
  B11110011,
  B01100011,
  B01100011,
  B01100001
},{
  B00000000,
  B00110000,
  B00110000,
  B00110011,
  B11100110,
  B11000110,
  B11000110,
  B11000011
},{
  B00000000,
  B01100000,
  B01100000,
  B01100111,
  B11001100,
  B10001100,
  B10001100,
  B10000111
},{
  B00000000,
  B11000000,
  B11000000,
  B11001111,
  B10011001,
  B00011001,
  B00011001,
  B00001111
},{
  B00000000,
  B10000000,
  B10000000,
  B10011110,
  B00110011,
  B00110011,
  B00110011,
  B00011110
},{
  B00000000,
  B00000000,
  B00000000,
  B00111100,
  B01100110,
  B01100110,
  B01100110,
  B00111100
},{
  B00000000,
  B00000000,
  B00000000,
  B01111001,
  B11001101,
  B11001101,
  B11001101,
  B01111000
},{
  B00000000,
  B00000000,
  B00000000,
  B11110011,
  B10011011,
  B10011011,
  B10011011,
  B11110001
},{
  B00000000,
  B00000000,
  B00000000,
  B11100110,
  B00110110,
  B00110110,
  B00110110,
  B11100011
},{
  B00000000,
  B00000000,
  B00000000,
  B11001100,
  B01101100,
  B01101100,
  B01101100,
  B11000111
},{
  B00000000,
  B00000000,
  B00000000,
  B10011001,
  B11011001,
  B11011001,
  B11011001,
  B10001111
},{
  B00000000,
  B00000000,
  B00000000,
  B00110011,
  B10110011,
  B10110011,
  B10110011,
  B00011111
},{
  B00000000,
  B00000001,
  B00000000,
  B01100110,
  B01100110,
  B01100110,
  B01100110,
  B00111110
},{
  B00000000,
  B00000011,
  B00000001,
  B11001101,
  B11001100,
  B11001100,
  B11001100,
  B01111100
},{
  B00000000,
  B00000110,
  B00000010,
  B10011010,
  B10011000,
  B10011000,
  B10011000,
  B11111000
},{
  B00000000,
  B00001100,
  B00000100,
  B00110101,
  B00110001,
  B00110001,
  B00110001,
  B11110001
},{
  B00000000,
  B00011000,
  B00001000,
  B01101011,
  B01100011,
  B01100011,
  B01100011,
  B11100011
},{
  B00000000,
  B00110000,
  B00010000,
  B11010111,
  B11000110,
  B11000110,
  B11000110,
  B11000110
},{
  B00000000,
  B01100000,
  B00100000,
  B10101111,
  B10001100,
  B10001100,
  B10001100,
  B10001100
},{
  B00000000,
  B11000000,
  B01000000,
  B01011111,
  B00011001,
  B00011001,
  B00011000,
  B00011000
},{
  B00000000,
  B10000000,
  B10000000,
  B10111110,
  B00110011,
  B00110011,
  B00110000,
  B00110000
},{
  B00000000,
  B00000000,
  B00000000,
  B01111100,
  B01100110,
  B01100110,
  B01100000,
  B01100000
},{
  B00000000,
  B00000000,
  B00000000,
  B11111000,
  B11001101,
  B11001101,
  B11000001,
  B11000000
},{
  B00000000,
  B00000000,
  B00000000,
  B11110001,
  B10011011,
  B10011011,
  B10000011,
  B10000001
},{
  B00000000,
  B00000000,
  B00000000,
  B11100011,
  B00110110,
  B00110111,
  B00000110,
  B00000011
},{
  B00000000,
  B00000000,
  B00000000,
  B11000111,
  B01101100,
  B01101111,
  B00001100,
  B00000111
},{
  B00000000,
  B00000000,
  B00000000,
  B10001111,
  B11011001,
  B11011111,
  B00011000,
  B00001110
},{
  B00000000,
  B00000000,
  B00000000,
  B00011110,
  B10110011,
  B10111111,
  B00110000,
  B00011100
},{
  B00000000,
  B00000000,
  B00000000,
  B00111100,
  B01100110,
  B01111110,
  B01100000,
  B00111000
},{
  B00000000,
  B00000000,
  B00000000,
  B01111000,
  B11001100,
  B11111100,
  B11000000,
  B01110000
},{
  B00000000,
  B00000000,
  B00000000,
  B11110000,
  B10011000,
  B11111000,
  B10000000,
  B11100000
},{
  B00000000,
  B00000001,
  B00000001,
  B11100001,
  B00110001,
  B11110001,
  B00000001,
  B11000001
},{
  B00000000,
  B00000011,
  B00000011,
  B11000011,
  B01100011,
  B11100011,
  B00000011,
  B10000011
},{
  B00000000,
  B00000110,
  B00000110,
  B10000110,
  B11000111,
  B11000110,
  B00000110,
  B00000111
},{
  B00000000,
  B00001100,
  B00001100,
  B00001100,
  B10001111,
  B10001100,
  B00001100,
  B00001111
},{
  B00000000,
  B00011000,
  B00011000,
  B00011000,
  B00011111,
  B00011001,
  B00011001,
  B00011111
},{
  B00000000,
  B00110000,
  B00110000,
  B00110000,
  B00111110,
  B00110011,
  B00110011,
  B00111110
},{
  B00000000,
  B01100000,
  B01100000,
  B01100000,
  B01111100,
  B01100110,
  B01100110,
  B01111100
},{
  B00000000,
  B11000000,
  B11000000,
  B11000000,
  B11111001,
  B11001101,
  B11001101,
  B11111000
},{
  B00000000,
  B10000000,
  B10000000,
  B10000001,
  B11110011,
  B10011011,
  B10011011,
  B11110001
},{
  B00000000,
  B00000000,
  B00000000,
  B00000011,
  B11100110,
  B00110111,
  B00110110,
  B11100011
},{
  B00000000,
  B00000000,
  B00000000,
  B00000111,
  B11001100,
  B01101111,
  B01101100,
  B11000111
},{
  B00000000,
  B00000000,
  B00000000,
  B00001111,
  B10011001,
  B11011111,
  B11011000,
  B10001110
},{
  B00000000,
  B00000000,
  B00000000,
  B00011110,
  B00110011,
  B10111111,
  B10110000,
  B00011100
},{
  B00000000,
  B00000000,
  B00000000,
  B00111100,
  B01100110,
  B01111110,
  B01100000,
  B00111000
},{
  B00000000,
  B00000000,
  B00000000,
  B01111000,
  B11001100,
  B11111100,
  B11000001,
  B01110000
},{
  B00000000,
  B00000000,
  B00000000,
  B11110001,
  B10011000,
  B11111001,
  B10000011,
  B11100001
},{
  B00000000,
  B00000000,
  B00000000,
  B11100011,
  B00110000,
  B11110011,
  B00000110,
  B11000011
},{
  B00000000,
  B00000000,
  B00000000,
  B11000111,
  B01100000,
  B11100111,
  B00001100,
  B10000111
},{
  B00000000,
  B00000000,
  B00000000,
  B10001111,
  B11000001,
  B11001111,
  B00011001,
  B00001111
},{
  B00000000,
  B00000000,
  B00000000,
  B00011110,
  B10000011,
  B10011111,
  B00110011,
  B00011111
},{
  B00000000,
  B00000000,
  B00000000,
  B00111100,
  B00000110,
  B00111110,
  B01100110,
  B00111110
},{
  B00000000,
  B00000000,
  B00000000,
  B01111001,
  B00001101,
  B01111101,
  B11001101,
  B01111100
},{
  B00000000,
  B00000000,
  B00000000,
  B11110011,
  B00011011,
  B11111011,
  B10011011,
  B11111001
},{
  B00000000,
  B00000000,
  B00000000,
  B11100110,
  B00110110,
  B11110110,
  B00110110,
  B11110011
},{
  B00000000,
  B00000000,
  B00000000,
  B11001100,
  B01101100,
  B11101100,
  B01101100,
  B11100111
},{
  B00000000,
  B00000000,
  B00000000,
  B10011001,
  B11011001,
  B11011001,
  B11011001,
  B11001111
},{
  B00000000,
  B00000000,
  B00000000,
  B00110011,
  B10110011,
  B10110011,
  B10110011,
  B10011111
},{
  B00000000,
  B00000000,
  B00000000,
  B01100110,
  B01100110,
  B01100110,
  B01100110,
  B00111110
},{
  B00000000,
  B00000000,
  B00000000,
  B11001100,
  B11001101,
  B11001100,
  B11001100,
  B01111100
},{
  B00000000,
  B00000000,
  B00000000,
  B10011000,
  B10011011,
  B10011000,
  B10011000,
  B11111000
},{
  B00000000,
  B00000000,
  B00000001,
  B00110001,
  B00110111,
  B00110001,
  B00110001,
  B11110001
},{
  B00000000,
  B00000000,
  B00000011,
  B01100011,
  B01101111,
  B01100011,
  B01100011,
  B11100011
},{
  B00000000,
  B00000000,
  B00000110,
  B11000110,
  B11011111,
  B11000110,
  B11000110,
  B11000110
},{
  B00000000,
  B00000000,
  B00001100,
  B10001100,
  B10111111,
  B10001100,
  B10001100,
  B10001100
},{
  B00000000,
  B00000000,
  B00011000,
  B00011000,
  B01111110,
  B00011000,
  B00011000,
  B00011000
},{
  B00000000,
  B00000000,
  B00110000,
  B00110000,
  B11111100,
  B00110000,
  B00110000,
  B00110001
},{
  B00000000,
  B00000000,
  B01100001,
  B01100000,
  B11111001,
  B01100001,
  B01100001,
  B01100011
},{
  B00000000,
  B00000000,
  B11000011,
  B11000000,
  B11110011,
  B11000011,
  B11000011,
  B11000111
},{
  B00000000,
  B00000000,
  B10000110,
  B10000000,
  B11100110,
  B10000110,
  B10000110,
  B10001111
},{
  B00000000,
  B00000000,
  B00001100,
  B00000000,
  B11001100,
  B00001100,
  B00001100,
  B00011110
},{
  B00000000,
  B00000000,
  B00011000,
  B00000000,
  B10011000,
  B00011001,
  B00011000,
  B00111100
},{
  B00000000,
  B00000000,
  B00110001,
  B00000001,
  B00110001,
  B00110011,
  B00110001,
  B01111001
},{
  B00000000,
  B00000001,
  B01100011,
  B00000011,
  B01100011,
  B01100111,
  B01100011,
  B11110011
},{
  B00000000,
  B00000011,
  B11000110,
  B00000110,
  B11000110,
  B11001111,
  B11000110,
  B11100110
},{
  B00000000,
  B00000111,
  B10001101,
  B00001100,
  B10001100,
  B10011111,
  B10001100,
  B11001100
},{
  B00000000,
  B00001110,
  B00011011,
  B00011000,
  B00011000,
  B00111110,
  B00011000,
  B10011000
},{
  B00000000,
  B00011100,
  B00110110,
  B00110000,
  B00110000,
  B01111100,
  B00110000,
  B00110000
},{
  B00000000,
  B00111000,
  B01101100,
  B01100001,
  B01100001,
  B11111001,
  B01100001,
  B01100000
},{
  B00000000,
  B01110000,
  B11011000,
  B11000011,
  B11000011,
  B11110011,
  B11000011,
  B11000001
},{
  B00000000,
  B11100000,
  B10110000,
  B10000110,
  B10000110,
  B11100110,
  B10000110,
  B10000011
},{
  B00000000,
  B11000000,
  B01100000,
  B00001100,
  B00001100,
  B11001100,
  B00001100,
  B00000111
},{
  B00000000,
  B10000000,
  B11000000,
  B00011001,
  B00011001,
  B10011001,
  B00011001,
  B00001111
},{
  B00000000,
  B00000000,
  B10000000,
  B00110011,
  B00110011,
  B00110011,
  B00110011,
  B00011111
},{
  B00000000,
  B00000000,
  B00000000,
  B01100110,
  B01100110,
  B01100110,
  B01100110,
  B00111110
},{
  B00000000,
  B00000001,
  B00000001,
  B11001101,
  B11001101,
  B11001101,
  B11001101,
  B01111101
},{
  B00000000,
  B00000011,
  B00000011,
  B10011011,
  B10011011,
  B10011011,
  B10011011,
  B11111011
},{
  B00000000,
  B00000110,
  B00000110,
  B00110110,
  B00110110,
  B00110110,
  B00110110,
  B11110110
}};
const int MESSAGE_LEN = sizeof(MESSAGE)/8;

int ANIMATION_LEN = 0;

/* we always wait a bit between updates of the display */
unsigned long delaytime = 300;


void setup() {
  Serial.begin(9600);

  pinMode(buttonPin, INPUT);
  digitalWrite(buttonPin, HIGH); // enable pullup resistor

  display.clearDisplay(0);
  display.shutdown(0, false);
  display.setIntensity(0, 10);
}

void displayImage(const byte* image) {
  for (int i = 0; i < 8; i++) {
    for (int j = 0; j < 8; j++) {
      display.setLed(0, i, j, bitRead(image[i], 7 - j));
    }
  }
}

// animation variables
int animFrame = 0;
unsigned long animTime = 0;   // the last time we processed doBlink()
unsigned long animDelay = 333;  // milliseconds between animation calls
unsigned long millisecs = 0;    // a millis() time-slice

// button timing variables
int hold_type = 0;
int firsttime = 1;
unsigned long startTime;
unsigned long pressTime;

void loop() {
  millisecs = millis();
  // read the state of the pushbutton value:
  int  buttonState = digitalRead(buttonPin);

  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:
  if (buttonState == LOW) {
    if (firsttime == 1) {
      startTime = millisecs;
      firsttime = 0;
    }
    pressTime = millisecs - startTime;
    if (pressTime >= 1) {
      Serial.print("Time: ");
      Serial.print(pressTime);
      Serial.print(" milliseconds ");
      Serial.print(int(pressTime / 1000));
      Serial.println(" seconds");
    }
    if (pressTime > 3000) {
      // 3 sec hold
      hold_type = 3;
      ANIMATION_LEN = MESSAGE_LEN;
      
    } else if (pressTime > 2000) {
      // 2 sec hold
      ANIMATION_LEN = BEATING_HEART_LEN;
      // repeat = 0;
      hold_type = 2;
      Serial.println("beating heart repeat");

    } else if (pressTime > 1000) {
      // 1 sec hold
      ANIMATION_LEN = EXPLOSION_LEN;
      Serial.println("explosion");
      hold_type = 1;

    } else {
      // quick press
      ANIMATION_LEN = BEATING_HEART_LEN;
      Serial.println("beating heart");
      hold_type = 0;
    }
    animFrame = 0;
    //Serial.print("Pressed\n");
  } else {
    if (firsttime == 0) {
      firsttime = 1;
      Serial.println("Time: 0 milleseconds; 0 seconds");
    }
  }

  if ( animTime + animDelay < millisecs ) {
    animTime = millisecs;

    // animate
    if (hold_type == 0) {
      displayImage(BEATING_HEART[animFrame]);
    } else if (hold_type == 1) {
      displayImage(EXPLOSION[animFrame]);
    } else if (hold_type == 2) {
      displayImage(BEATING_HEART[animFrame]);
    } else if (hold_type == 3) {
      displayImage(MESSAGE[animFrame]);
    }
    if (++animFrame >= ANIMATION_LEN ) {
      // looping, or not
      animFrame = 0;
    }
  }
}
